@font-face { font-family: '8bitOperatorPlus-Bold'; src: url("/8bitOperatorPlus-Bold.eot?#iefix") format("embedded-opentype"), url("/8bitOperatorPlus-Bold.woff") format("woff"), url("/8bitOperatorPlus-Bold.ttf") format("truetype"), url("/8bitOperatorPlus-Bold.svg#8bitOperatorPlus-Bold") format("svg"); font-weight: normal; font-style: normal; }

@font-face { font-family: '8bitOperatorPlus-Regular'; src: url("/8bitOperatorPlus-Regular.eot?#iefix") format("embedded-opentype"), url("/8bitOperatorPlus-Regular.woff") format("woff"), url("/8bitOperatorPlus-Regular.ttf") format("truetype"), url("/8bitOperatorPlus-Regular.svg#8bitOperatorPlus-Bold") format("svg"); font-weight: normal; font-style: normal; }

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

body {
  width: 100%;
  margin: auto;
  height: 100%;
  background-color: black;
  background-image: url(/animated_bg_long.gif);
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: bottom;
  background-size: cover;
  image-rendering: pixelated;
  font-family: "8bitOperatorPlus-Regular", monospace;
  text-shadow: 2px 2px #000000;
  font-size: 20px;
  color: white;
  font-smooth: never;
  -webkit-font-smoothing: none;
}

small {
  padding-top: 1rem;
  color: lightgray;
  font-size: 0.9rem;
}

strong, b {
  font-weight: normal;
  font-family: "8bitOperatorPlus-Bold", monospace;
  color: yellow;
}

h1, h2, h3, h4, h5, h6 {
  font-weight: normal;
  font-family: "8bitOperatorPlus-Bold", monospace;
}

h1.markdown[level="1"] {
  margin-left: min(0.6rem, 1.5vw);
}

#tree, #alphabetical {
  a {
    word-break: break-word;
  }
}

a, a code {
  color: rgba(0, 200, 200, 1);
  text-decoration: none;
}

a:hover, a:hover code {
  color: rgba(0, 255, 255, 1);
  text-decoration-line: underline;
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}

hr {
  border-width: 1px;
  border-color: white;
  border-style: solid;
}

p {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

img {
  max-width: 100%;
}

video {
  max-width: 100%;
}

li {
  margin-left: 2rem;
}

li::marker {
  color: lightslategray;
}

h1 a, h2 a, h3 a, h4 a, h5 a, h6 a {
  color: white;
}

h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
  word-break: break-word;
}

h1 a:hover, h2 a:hover, h3 a:hover, h4 a:hover, h5 a:hover, h6 a:hover {
  color: yellow;
}

table {
  border-collapse: collapse;
  border: white 4px solid;
}

th, td {
  border: white 2px solid;
  padding: 0.5rem;
}

thead tr, tbody tr:nth-child(even) {
  background-color: rgba(0, 0, 0, 0.5);
}

tbody tr:nth-child(odd) {
  background-color: rgba(0, 0, 0, 0.75);
}

table, th, td, tr {
  max-width: 100%;
}

td, th {
  overflow-wrap: break-word;
  word-break: break-word;
}

code {
  overflow-wrap: break-word;
  word-break: break-word;
}

thead {
  font-weight: normal;
  font-family: "8bitOperatorPlus-Bold", monospace;
}

pre {
  text-wrap: balance;
}

code {
  text-wrap: balance;
  color: #c9d1d9;
  background: #0d1117;
  border-radius: 4px;
  padding: 2px;
}

summary {
  cursor: pointer;
  display: block;
}


summary::after {
  margin-right: 1em;
  display: inline-block;
  content: '+';
  float: right;
}

details[open] > summary::after {
  content: '-';
}

summary > * {
  display: inline;
}

details > summary:hover {
  color: rgba(255, 255, 0, 1);
}
/* DONT use this to write lua code. it's auto generated by the docs and sometimes overflows*/
code.language-lua{
  display: block;
  overflow-x: scroll;
  text-wrap: balance;
  color: #c9d1d9;
  background: #0d1117;
  border-style: dashed;
  border-width: thin;
  border-color: #c9d1d9;
  border-radius: 2px;
  padding: 2px;
}